@inherits Nancy.ViewEngines.Razor.NancyRazorViewBase<dynamic>
@using System.Collections.Generic;

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width,initial-scale=1,user-scalable=0">
    <title>订单查询</title>
    <link href="/resource/vux/dist/vux.css" rel="stylesheet" />
    <style type="text/css">
        body{background-color:#fbf9fe;}
        header {
            position: fixed;
            width: 100%;
            z-index: 1;
        }

        .vux-scroller-header-box {
            padding-top: 100px;
        }

        .order-panel {
            font-size: 14px;
            padding: 14px 15px 12px 15px;
            margin: 6px 0px 15px 0px;
            background: #fff;
            border-top: 1px solid #e5e5e5;
            border-bottom: 1px solid #e5e5e5;
            line-height: 1.7;
        }

        .order-detail {
            padding: 8px 0px 8px 0px;
           
        }
        .order-head{
            font-size:13px;color:#999;border-bottom:1px solid #e5e5e5;padding:2px 0px 8px 0px;
        }
        .order-amount{
            font-size:12px;font-weight:bold;color:red;float:right;
        }
        .order-amount1{
            font-size:12px;font-weight:bold;color:#000;float:right;
        }
        .order-num{
            font-size:11px;color:#999;float:right;
        }
        .order-splite{ border-bottom:1px dotted #e5e5e5;}
        .order-splite-no{border:0px;}
    </style>
    <script src="http://cdn.bootcss.com/vue/1.0.28/vue.min.js"></script>
</head>
<body>
    <div id="app">

        <header>
            <x-header :left-options="{showBack: false}">订单查询</x-header>
            <tab :line-width=1>
                <tab-item selected v-on:click="showTab(0)">待付款</tab-item>
                <tab-item v-on:click="showTab(1)">已付款</tab-item>
                <tab-item v-on:click="showTab(2)">待发货</tab-item>
                <tab-item v-on:click="showTab(3)">待收货</tab-item>
                <tab-item v-on:click="showTab(4)">已完成</tab-item>
            </tab>
        </header>

        <loading :show="loadingshow" :text=""></loading>

        <div class="vux-scroller-header-box" v-show="vs===0">
            <div>
                <div class="order-panel" v-for="order in orders1">
                    <div class="order-head">订单号:{{order.orderid}}  <div class="order-amount">应付款：￥{{order.detail[0].amount}}</div></div>
                    <div v-bind:class="{'order-detail' : true, 'order-splite' : order.detail.length > 1, 'order-splite-no' : order.detail.length === index + 1}" v-for="(index,item) in order.detail">
                        <div>供应商:{{item.supplierName}}<div class="order-amount1">￥{{item.amountDetail}}</div> </div>
                        <div>材料:{{item.matName}} <div class="order-num">x{{item.num}}</div> </div>
                        <div>文件：{{item.fileName.split('$')[2]}}</div>
                        <div>尺寸：{{item.size}}</div>                           
                    </div>   
                    <div class="modal-body">
                        <p><img src="/images/wxpay/WePayLogo.png" style="width:95px;" /></p>
                        <p>
                            <img v-bind:src="'./qrcode/' + order.orderid" alt="" style="height: 140px;" />
                        </p>
                        <p>长按二维码，点击"识别图中二维码"付款</p>
                        <p>支付完后，订单状态更新可能会有几秒的延迟!</p>
                    </div>                    
                </div>
            </div>           
        </div>

        <div class="vux-scroller-header-box" v-show="vs===1">
            <div>
                <div class="order-panel" v-for="order in orders2">
                    <div class="order-head">订单号:{{order.orderid}}  <div class="order-amount1">总付：￥{{order.detail[0].amount}}</div></div>
                    <div v-bind:class="{'order-detail' : true, 'order-splite' : order.detail.length > 1, 'order-splite-no' : order.detail.length === index + 1}" v-for="(index,item) in order.detail">
                        <div>供应商:{{item.supplierName}}<div class="order-amount1">￥{{item.amountDetail}}</div> </div>
                        <div>材料:{{item.matName}} <div class="order-num">x{{item.num}}</div> </div>
                        <div>文件：{{item.fileName.split('$')[2]}}</div>
                        <div>尺寸：{{item.size}}</div>
                    </div>
                </div>
            </div>
        </div>

        <div class="vux-scroller-header-box" v-show="vs===2">
            <div>
                <div class="order-panel" v-for="order in orders3">
                    <div class="order-head">订单号:{{order.orderid}}  <div class="order-amount1">总付：￥{{order.detail[0].amount}}</div></div>
                    <div v-bind:class="{'order-detail' : true, 'order-splite' : order.detail.length > 1, 'order-splite-no' : order.detail.length === index + 1}" v-for="(index,item) in order.detail">
                        <div>供应商:{{item.supplierName}}<div class="order-amount1">￥{{item.amountDetail}}</div> </div>
                        <div>材料:{{item.matName}} <div class="order-num">x{{item.num}}</div> </div>
                        <div>文件：{{item.fileName.split('$')[2]}}</div>
                        <div>尺寸：{{item.size}}</div>
                    </div>
                </div>
            </div>
        </div>

        <div class="vux-scroller-header-box" v-show="vs===3">
            <div>
                <div class="order-panel" v-for="order in orders4">
                    <div class="order-head">订单号:{{order.orderid}}  <div class="order-amount1">总付：￥{{order.detail[0].amount}}</div></div>
                    <div v-bind:class="{'order-detail' : true, 'order-splite' : order.detail.length > 1, 'order-splite-no' : order.detail.length === index + 1}" v-for="(index,item) in order.detail">
                        <div>供应商:{{item.supplierName}}<div class="order-amount1">￥{{item.amountDetail}}</div> </div>
                        <div>材料:{{item.matName}} <div class="order-num">x{{item.num}}</div> </div>
                        <div>文件：{{item.fileName.split('$')[2]}}</div>
                        <div>尺寸：{{item.size}}</div>
                    </div>
                </div>
            </div>
        </div>

        <div class="vux-scroller-header-box" v-show="vs===4">
            <div>
                <div class="order-panel" v-for="order in orders5">
                    <div class="order-head">订单号:{{order.orderid}}  <div class="order-amount1">总付：￥{{order.detail[0].amount}}</div></div>
                    <div v-bind:class="{'order-detail' : true, 'order-splite' : order.detail.length > 1, 'order-splite-no' : order.detail.length === index + 1}" v-for="(index,item) in order.detail">
                        <div>供应商:{{item.supplierName}}<div class="order-amount1">￥{{item.amountDetail}}</div> </div>
                        <div>材料:{{item.matName}} <div class="order-num">x{{item.num}}</div> </div>
                        <div>文件：{{item.fileName.split('$')[2]}}</div>
                        <div>尺寸：{{item.size}}</div>
                    </div>
                </div>
            </div>
        </div>

        <popup :show.sync="bandingshow" height="100%">
            <div>
                <header>
                    <x-header :left-options="{showBack: false}">
                        帐号绑定
                        <a slot="right" v-on:click="bandingshow=false">关闭</a>
                    </x-header>
                </header>
                <div style="padding-top:54px;">
                    <div style="margin:3px 0px 8px 18px;color:red;font-size:12px;">
                        你的微信还未绑定，请填写帐号密码，绑定后才能查看订单信息！
                    </div>
                    <x-input title="用户：" placeholder="电子邮箱" type="email" required="required" :value.sync="username"></x-input>
                    <x-input title="密码：" placeholder="密码" type="password" required="required" :value.sync="pwd"></x-input>

                    <div style="margin:6px 15px 6px 15px;">
                        <x-button type="primary" v-on:click="onSubmit">绑定</x-button>
                    </div>
                </div>
            </div>
        </popup>

    </div>

    <script src="/resource/vux/dist/components/group/index.js"></script>
    <script src="/resource/vux/dist/components/cell/index.js"></script>
    <script src="/resource/vux/dist/components/tab/index.js"></script>
    <script src="/resource/vux/dist/components/tab-item/index.js"></script>
    <script src="/resource/vux/dist/components/sticky/index.js"></script>
    <script src="/resource/vux/dist/components/button-tab/index.js"></script>
    <script src="/resource/vux/dist/components/button-tab-item/index.js"></script>
    <script src="/resource/vux/dist/components/search/index.js"></script>
    <script src="/resource/vux/dist/components/selector/index.js"></script>
    <script src="/resource/vux/dist/components/divider/index.js"></script>
    <script src="/resource/vux/dist/components/x-button/index.js"></script>
    <script src="/resource/vux/dist/components/x-input/index.js"></script>
    <script src="/resource/vux/dist/components/popup/index.js"></script>
    <script src="/resource/vux/dist/components/x-header/index.js"></script>
    <script src="/resource/vux/dist/components/icon/index.js"></script>
    <script src="/resource/vux/dist/components/scroller/index.js"></script>
    <script src="/resource/vux/dist/components/loading/index.js"></script>

    <script src="http://cdn.bootcss.com/jquery/3.1.1/jquery.min.js"></script>

    <script>        
        // register components
        Vue.component('group', vuxGroup);
        Vue.component('cell', vuxCell);
        Vue.component('sticky', vuxSticky);
        Vue.component('tab', vuxTab);
        Vue.component('tab-item', vuxTabItem);
        Vue.component('button-tab', vuxButtonTab);
        Vue.component('button-tab-item', vuxButtonTabItem);
        Vue.component('search', vuxSearch);
        Vue.component('selector', vuxSelector);
        Vue.component('divider', vuxDivider);
        Vue.component('x-button', vuxXButton);
        Vue.component('x-input', vuxXInput);
        Vue.component('popup', vuxPopup);
        Vue.component('x-header', vuxXHeader);
        Vue.component('icon', vuxIcon);
        Vue.component('scroller', vuxScroller);
        Vue.component('loading', vuxLoading);

        var vm = new Vue({
            el: '#app',
            data: function () {
                return {
                    vs: 0,
                    orders1: [],
                    orders2: [],
                    orders3: [],
                    orders4: [],
                    orders5: [],
                    username: "",
                    pwd: "",
                    userid: "@Model.Userid",
                    openid: "@Model.Openid",
                    loadingshow: false,
                    bandingshow: '@Model.Userid' === ''
                }
            },
            methods: {
                showTab: function (val) {
                    this.vs = val;
                },
                getData: function (userid) {
                    $.get("./order/" + userid, function (data) {
                        $.each(data, function (index, value) {
                            if (value.state === '1') {
                                vm.orders1 = value.orders;
                            }
                            if (value.state === '2') {
                                vm.orders2 = value.orders;
                            }
                            if (value.state === '5') {
                                vm.orders3 = value.orders;
                            }
                            if (value.state === '6') {
                                vm.orders4 = value.orders;
                            }
                            if (value.state === '7' || value.state === '8') {
                                vm.orders5 = value.orders;
                            }
                        });
                    });
                },
                onSubmit: function () {
                    $.post("./bindaccountwx/" + this.openid, { username: this.username, pwd: this.pwd }, function (data) {
                        vm.bandingshow = false;
                        loadingshow = true;
                        vm.getData(data.userid);
                    });
                }
            },
            ready: function () {

                //$.get("/orders1.json", function (data) {
                //    $.each(data, function (index, value) {
                //        if (value.state === '1') {
                //            vm.orders1 = value.orders;
                //        }
                //        if (value.state === '5') {
                //            vm.orders2 = value.orders;
                //        }
                //        if (value.state === '6') {
                //            vm.orders3 = value.orders;
                //        }
                //        if (value.state === '7' || value.state === '8') {
                //            vm.orders3 = value.orders;
                //        }
                //    });
                // });

                if (this.userid != '') {
                    this.getData(this.userid);
                }
            },
            created: function () {
                var i = 0;
                var int = setInterval(function () {
                    i++;
                    if (i === 120) {
                        window.clearInterval(int);
                    }
                    vm.getData(vm.userid);
                }, 3000);
            }

        });
    </script>    

    <!-- fastclick -->
    <script src="http://cdn.bootcss.com/fastclick/1.0.6/fastclick.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
          FastClick.attach(document.body)
        }, false)
    </script>
</body>
</html>
